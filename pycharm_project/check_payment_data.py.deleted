#!/usr/bin/env python
import os
import sys
import django

# Django設定を読み込み
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django_project.settings')
django.setup()

from api.models.credit_charge import CreditCharge
from api.models.payment_log import PaymentLog

def check_payment_data():
    print("=== 決済データの調査 ===")
    print()
    
    # CreditChargeテーブルの統計
    print("📊 CreditCharge テーブル:")
    total_charges = CreditCharge.objects.count()
    pending_charges = CreditCharge.objects.filter(payment_status='pending').count()
    succeeded_charges = CreditCharge.objects.filter(payment_status='succeeded').count()
    failed_charges = CreditCharge.objects.filter(payment_status='failed').count()
    
    print(f"  総レコード数: {total_charges}")
    print(f"  pending: {pending_charges}")
    print(f"  succeeded: {succeeded_charges}")
    print(f"  failed: {failed_charges}")
    print()
    
    # PaymentLogテーブルの統計
    print("📊 PaymentLog テーブル:")
    total_logs = PaymentLog.objects.count()
    pending_logs = PaymentLog.objects.filter(status='pending').count()
    success_logs = PaymentLog.objects.filter(status='success').count()
    failed_logs = PaymentLog.objects.filter(status='failed').count()
    
    print(f"  総レコード数: {total_logs}")
    print(f"  pending: {pending_logs}")
    print(f"  success: {success_logs}")
    print(f"  failed: {failed_logs}")
    print()
    
    # 最新のCreditChargeレコード
    print("🕒 最新のCreditChargeレコード（最新5件）:")
    recent_charges = CreditCharge.objects.order_by('-created_at')[:5]
    for charge in recent_charges:
        print(f"  ID: {charge.id}")
        print(f"    ステータス: {charge.payment_status}")
        print(f"    金額: ¥{charge.charge_amount}")
        print(f"    クレジット: {charge.credit_amount}")
        print(f"    作成日時: {charge.created_at}")
        print(f"    完了日時: {charge.completed_at}")
        print(f"    Stripe ID: {charge.stripe_payment_intent_id}")
        print()
    
    # 最新のPaymentLogレコード
    print("🕒 最新のPaymentLogレコード（最新5件）:")
    recent_logs = PaymentLog.objects.order_by('-created_at')[:5]
    for log in recent_logs:
        print(f"  ID: {log.id}")
        print(f"    ステータス: {log.status}")
        print(f"    金額: {log.amount} {log.currency}")
        print(f"    作成日時: {log.created_at}")
        print(f"    Stripe ID: {log.payment_intent_id}")
        print(f"    Webhookタイプ: {log.webhook_event_type}")
        print(f"    処理済み: {log.processed}")
        print()
    
    # 謎の処理中レコードの詳細
    print("🔍 処理中ステータスの詳細調査:")
    pending_charges_detail = CreditCharge.objects.filter(payment_status='pending')
    if pending_charges_detail.exists():
        print(f"  CreditChargeで処理中のレコード: {pending_charges_detail.count()}件")
        for charge in pending_charges_detail:
            print(f"    ID: {charge.id}, 金額: ¥{charge.charge_amount}, 作成: {charge.created_at}")
    else:
        print("  CreditChargeに処理中のレコードはありません")
    
    pending_logs_detail = PaymentLog.objects.filter(status='pending')
    if pending_logs_detail.exists():
        print(f"  PaymentLogで処理中のレコード: {pending_logs_detail.count()}件")
        for log in pending_logs_detail:
            print(f"    ID: {log.id}, 金額: {log.amount}, 作成: {log.created_at}, Webhook: {log.webhook_event_type}")
    else:
        print("  PaymentLogに処理中のレコードはありません")

if __name__ == "__main__":
    check_payment_data() 