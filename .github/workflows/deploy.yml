name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: |
        cd pycharm_project
        pip install -r requirements.txt
    
    - name: Install Node dependencies
      run: |
        cd react_project
        npm install
    
    - name: Run Django tests
      run: |
        cd pycharm_project
        python manage.py test
    
    - name: Build React app
      run: |
        cd react_project
        npm run build

  deploy-gcp:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: aisha-462412
        export_default_credentials: true
    
    - name: Configure Docker for GCP
      run: |
        gcloud auth configure-docker asia-northeast1-docker.pkg.dev
    
    - name: Deploy Backend to Cloud Run
      run: |
        gcloud run deploy aisha-backend \
          --source ./pycharm_project \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
          --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --set-env-vars DEBUG=False \
          --set-env-vars ALLOWED_HOSTS=*.run.app \
          --set-env-vars GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
    
    - name: Apply Database Migrations
      run: |
        echo "🔄 データベースマイグレーション自動実行..."
        BACKEND_URL="https://aisha-backend-584412696241.asia-northeast1.run.app"
        
        # マイグレーション状況をチェック
        echo "マイグレーション状況確認中..."
        MIGRATION_STATUS=$(curl -s -X GET "$BACKEND_URL/api/admin/migrate/status/" || echo "failed")
        
        if [[ "$MIGRATION_STATUS" == "failed" ]]; then
            echo "⚠️ マイグレーション状況の確認に失敗しました。"
            exit 1
        else
            echo "現在のマイグレーション状況を確認しました。"
            
            # 未適用のマイグレーションがあるかチェック
            if echo "$MIGRATION_STATUS" | grep -q "[ ]"; then
                echo "🔄 未適用のマイグレーションが検出されました。自動適用中..."
                
                # マイグレーション実行
                MIGRATION_RESULT=$(curl -s -X POST "$BACKEND_URL/api/admin/migrate/" -H "Content-Type: application/json" -d "{}")
                
                if echo "$MIGRATION_RESULT" | grep -q '"success":true'; then
                    echo "✅ データベースマイグレーション完了"
                    echo "📋 適用内容:"
                    echo "$MIGRATION_RESULT" | grep -o '"output":"[^"]*"' | sed 's/"output":"//;s/"$//' | sed 's/\\n/\n/g'
                else
                    echo "❌ マイグレーション適用に失敗しました"
                    echo "エラー詳細: $MIGRATION_RESULT"
                    exit 1
                fi
            else
                echo "✅ すべてのマイグレーションが適用済みです"
            fi
        fi
    
    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy aisha-frontend \
          --source ./react_project \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars NODE_ENV=production \
          --set-env-vars VITE_AISHA_API_BASE=https://aisha-backend-584412696241.asia-northeast1.run.app/api \
          --set-env-vars VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }} \
          --set-env-vars VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }} \
          --set-env-vars VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }} \
          --set-env-vars VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}