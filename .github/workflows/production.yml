name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: aisha-462412
        export_default_credentials: true
    
    - name: Configure Docker for GCP
      run: |
        gcloud auth configure-docker asia-northeast1-docker.pkg.dev
    
    - name: Deploy Backend to Cloud Run
      run: |
        gcloud run deploy aisha-backend-test \
          --source ./pycharm_project \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
          --set-env-vars DATABASE_URL=postgresql://postgres:postgres@34.85.116.154:5432/postgres \
          --set-env-vars DEBUG=False \
          --set-env-vars ALLOWED_HOSTS=*.run.app
    
    - name: Get Backend URL
      run: |
        BACKEND_URL=$(gcloud run services describe aisha-backend-test --region asia-northeast1 --format 'value(status.url)')
        echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
    
    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy aisha-frontend-test \
          --source ./react_project \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --set-env-vars NODE_ENV=production \
          --set-env-vars VITE_AISHA_API_BASE=${{ env.BACKEND_URL }}/api
    
    - name: Get Frontend URL
      run: |
        FRONTEND_URL=$(gcloud run services describe aisha-frontend-test --region asia-northeast1 --format 'value(status.url)')
        echo "ðŸŽ‰ Deployment Complete!"
        echo "Backend: ${{ env.BACKEND_URL }}"
        echo "Frontend: $FRONTEND_URL"